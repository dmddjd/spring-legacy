<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="board">
	
	<select id="getBoardTypeMap" resultType="boardType">
		SELECT BOARD_CD AS "boardCd" , BOARD_NAME 
		FROM BOARD_TYPE
	</select>
	
	<select id="selectListCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM BOARD B
		LEFT JOIN MEMBER M ON BOARD_WRITER = USER_NO
		WHERE B.STATUS = 'Y' AND BOARD_CD = #{boardCode}
		<if test="keyword != null and keyword != ''">
			AND 
			<choose>
				<when test="condition.equals('title')">
					BOARD_TITLE LIKE '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('writer')">
					USER_NAME LIKE '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('content')">
					BOARD_CONTENT LIKE '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('titleAndContent')">
					(BOARD_TITLE LIKE '%' || #{keyword} || '%' OR
					BOARD_CONTENT LIKE '%' || #{keyword} || '%')
				</when>
			</choose>
		</if>		
	</select>
	
	<select id="selectList" parameterType="map" resultType="board">
		SELECT 
			BOARD_NO ,
			BOARD_TITLE , 
			USER_NAME AS BOARD_WRITER ,
			COUNT , 
			CREATE_DATE
		FROM BOARD B
		LEFT JOIN MEMBER M ON BOARD_WRITER = USER_NO
		WHERE B.STATUS = 'Y' AND BOARD_CD = #{boardCode}
		<if test="keyword != null and keyword != ''">
			AND 
			<choose>
				<when test="condition.equals('title')">
					BOARD_TITLE LIKE '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('writer')">
					USER_NAME LIKE '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('content')">
					BOARD_CONTENT LIKE '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('titleAndContent')">
					(BOARD_TITLE LIKE '%' || #{keyword} || '%' OR
					BOARD_CONTENT LIKE '%' || #{keyword} || '%')
				</when>
			</choose>
		</if>	
		ORDER BY BOARD_NO DESC
		OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
	</select>
	
	<insert id="insertBoard">
		<!-- 
			selectKey
			 - INSERT 전/후에 실행되어 게시글 번호와 같은 자동증가값을 가져오는 구문
			 - keyProperty : 결과값을 저장할 필드명
			 - resultType : 반환되는 타입의 자료형
			 - order : insert 전에 실행될지 후에 실행될지를 지정하는 속성
			 - 같은 트랜잭션에서 현재 테이블의 PK값이 필요한 경우 사용
		 -->
		<selectKey keyProperty="boardNo" resultType="int" order="BEFORE" >
			SELECT SEQ_BNO.NEXTVAL FROM DUAL		
		</selectKey>
		
		INSERT INTO BOARD
		(
			BOARD_NO,
			BOARD_TITLE,
			BOARD_CONTENT,
			BOARD_CD,
			BOARD_WRITER
		) VALUES 
		(
			#{boardNo} ,
			#{boardTitle},
			#{boardContent},
			#{boardCd} ,
			#{boardWriter}		
		)
	</insert>
	
	<!-- 
		다중 인서트문
		- mybatis의 foreach태그를 이용하여 전달받은 배열의 길이만큼 select문을 생성 후 , Union ALL 접합
	 -->
	<insert id="insertBoardImgList">
		INSERT INTO BOARD_IMG(BOARD_IMG_NO, ORIGIN_NAME, CHANGE_NAME, REF_BNO, IMG_LEVEL)
		SELECT SEQ_IMG_NO.NEXTVAL , C.* 
		FROM (
			<foreach collection="list" item="bi" separator="UNION ALL">
				SELECT
					#{bi.originName}, #{bi.changeName} , #{bi.refBno} , #{bi.imgLevel} 
				FROM DUAL				
			</foreach>
		) C
	</insert>
	
	<select id="selectBoard" resultMap="boardExtResultMap">
		SELECT
			BOARD_NO ,
			BOARD_WRITER ,
			BOARD_TITLE , BOARD_CONTENT , COUNT , CREATE_DATE,
			USER_NAME
		FROM BOARD B
		LEFT JOIN MEMBER ON BOARD_WRITER = USER_NO
		WHERE BOARD_NO = #{boardNo} 
		AND B.STATUS = 'Y'			
	</select>
	
	<resultMap type="boardExt" id="boardExtResultMap">
		<id column="BOARD_NO" property="boardNo"/>
		<result column="BOARD_TITLE" property="boardTitle"/>
		<result column="BOARD_CONTENT" property="boardContent"/>
		<result column="BOARD_WRITER" property="boardWriter"/>
		<result column="CREATE_DATE" property="createDate" />
		<result column="USER_NAME" property="userName"/>
		<collection property="imgList" javaType="java.util.List" ofType="boardImg"
			select="selectBoardImgList" column="BOARD_NO">
		
		</collection>
		
	</resultMap>
	
	<select id="selectBoardImgList" resultType="boardImg">
		SELECT * FROM BOARD_IMG
		WHERE REF_BNO = #{boardNo}
		ORDER BY IMG_LEVEL
	</select>
	
	<update id="increaseCount">
		UPDATE BOARD SET
		COUNT = COUNT +1
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<update id="updateBoard">
		UPDATE BOARD SET
			BOARD_TITLE = #{boardTitle},
			BOARD_CONTENT = #{boardContent}
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<update id="updateBoardImg">
		UPDATE BOARD_IMG SET
		ORIGIN_NAME = #{originName},
		CHANGE_NAME = #{changeName}
		WHERE BOARD_IMG_NO = #{boardImgNo}		
	</update>
	
	<insert id="insertBoardImg">
		INSERT INTO BOARD_IMG
		VALUES(
			SEQ_IMG_NO.NEXTVAL,
			#{originName},
			#{changeName},
			#{refBno},
			#{imgLevel}
		)
	</insert>
	
	<delete id="deleteBoardImg">
		DELETE FROM BOARD_IMG
		WHERE BOARD_IMG_NO IN (${deleteList})
	</delete>
	
	
  	
</mapper>










